name: CI for Template

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

defaults:
  run:
    shell: bash

env:
  LANG: "en_US.utf-8"
  LC_ALL: "en_US.utf-8"
  PYTHONIOENCODING: "UTF-8"
  PYTHON_VERSIONS: ""

jobs:

  tests:
    name: ${{ matrix.name }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        python-version:
          - "3.8"
          - "3.9"
          - "3.10"
          - "3.11"
        include:
          - name: Base example
            module_name: 'example_project' #The default module_name
            extra_flags: '--data minimal_python_version=${{ matrix.python-version }}'
            foldername: 'base_example'
          - name: Provide non-default answers
            module_name: 'drewtonian' # Same module name provided in `extra_flags` on the next line.
            extra_flags: '--data minimal_python_version=${{ matrix.python-version }} --data project_name=new_science --data package_name=drewtonian --data author_name=Drew --data author_email=ao@aol.com'
            foldername: 'non_default_answers'

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4.5.0
      with:
        python-version: ${{ matrix.python-version }}
    - name: Set up PDM
      uses: pdm-project/setup-pdm@v2.5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Set cache variables
      id: set_variables
      run: |
        echo "::set-output name=PIP_CACHE::$(pip cache dir)"
        echo "::set-output name=PDM_CACHE::$(pdm config cache_dir)"
    - name: Set up cache
      uses: actions/cache@v3.2.6
      with:
        path: |
          ${{ steps.set_variables.outputs.PIP_CACHE }}
          ${{ steps.set_variables.outputs.PDM_CACHE }}
        key: checks-cache
    - name: Set up git
      run: |
        git config --global user.email "myrongt@gmail.com"
        git config --global user.name "Myron Tuttle"
        git config --global init.defaultBranch main
    - name: Install Python dependencies
      run: |
        sudo apt-get update
        python -m pip install --upgrade pip
        python -m pip install copier
    - name: Generate package
      run: |
        copier --vcs-ref HEAD --defaults ${{ matrix.extra_flags }} copy ./ ../test/${{ matrix.foldername }}
        cd ../test/${{ matrix.foldername }}
        cat .copier-answers.yml
